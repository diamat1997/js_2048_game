{"version":3,"sources":["scripts/main.js"],"names":["field","score","table","document","querySelector","button","startMessage","loseMessage","winMessage","gameScore","rowsCount","colsCount","isWin","i","j","deepCopyArray","arr","JSON","parse","stringify","isMoved","oldField","moveDirection","inputField","direction","movedField","newLine","move","reverse","length","array","movedArr","zerosInStart","filter","cell","unshift","addRandomCell","rowIndex","Math","floor","random","colIndex","renderField","rows","cells","className","classList","add","textContent","addEventListener","contains","remove","e","key"],"mappings":"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","file":"main.28908a58.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nconst table = document.querySelector('tbody');\nconst button = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nconst rowsCount = 4;\nconst colsCount = 4;\nlet field;\nlet score;\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n  } else {\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n  gameScore.textContent = score;\n\n  addRandomCell();\n  addRandomCell();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const oldField = deepCopyArray(field);\n\n  if (\n    !isMoved(moveDirection(oldField, 'up'))\n    && !isMoved(moveDirection(oldField, 'down'))\n    && !isMoved(moveDirection(oldField, 'right'))\n    && !isMoved(moveDirection(oldField, 'left'))\n  ) {\n    loseMessage.classList.remove('hidden');\n\n    return false;\n  }\n\n  switch (e.key) {\n    case 'ArrowUp':\n      field = deepCopyArray(moveDirection(field, 'up'));\n      break;\n    case 'ArrowDown':\n      field = deepCopyArray(moveDirection(field, 'down'));\n      break;\n    case 'ArrowRight':\n      field = deepCopyArray(moveDirection(field, 'right'));\n      break;\n    case 'ArrowLeft':\n      field = deepCopyArray(moveDirection(field, 'left'));\n      break;\n  }\n\n  if (isMoved(oldField)) {\n    addRandomCell();\n    gameScore.textContent = `${score}`;\n  }\n\n  if (isWin()) {\n    winMessage.classList.remove('hidden');\n  }\n});\n\nfunction isWin() {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < colsCount; j++) {\n      if (field[i][j] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction deepCopyArray(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nfunction isMoved(oldField) {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < colsCount; j++) {\n      if (oldField[i][j] !== field[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveDirection(inputField, direction) {\n  const movedField = deepCopyArray(inputField);\n\n  for (let i = 0; i < rowsCount; i++) {\n    let newLine;\n\n    if (direction === 'up' || direction === 'down') {\n      newLine = [\n        movedField[0][i],\n        movedField[1][i],\n        movedField[2][i],\n        movedField[3][i],\n      ];\n    } else if (direction === 'left' || direction === 'right') {\n      newLine = movedField[i];\n    }\n\n    if (direction === 'up' || direction === 'left') {\n      newLine = move(newLine.reverse()).reverse();\n    } else if (direction === 'down' || direction === 'right') {\n      newLine = move(newLine);\n    }\n\n    for (let j = 0; j < newLine.length; j++) {\n      if (direction === 'up' || direction === 'down') {\n        movedField[j][i] = newLine[j];\n      } else if (direction === 'left' || direction === 'right') {\n        movedField[i][j] = newLine[j];\n      }\n    }\n  }\n\n  return movedField;\n}\n\nfunction move(array) {\n  const movedArr = zerosInStart(array);\n\n  for (let i = movedArr.length; i > 0; i--) {\n    if (movedArr[i] === movedArr[i - 1]) {\n      movedArr[i] += movedArr[i];\n      score += movedArr[i];\n      movedArr[i - 1] = 0;\n    }\n  }\n\n  return zerosInStart(movedArr);\n}\n\nfunction zerosInStart(array) {\n  const movedArr = array.filter((cell) => cell !== 0);\n  const startIndex = movedArr.length;\n\n  for (let i = startIndex; i < array.length; i++) {\n    movedArr.unshift(0);\n  }\n\n  return movedArr;\n}\n\nfunction addRandomCell() {\n  while (true) {\n    const rowIndex = Math.floor(Math.random() * rowsCount);\n    const colIndex = Math.floor(Math.random() * colsCount);\n\n    if (field[rowIndex][colIndex] === 0) {\n      field[rowIndex][colIndex] = Math.random() >= 0.9 ? 4 : 2;\n      break;\n    }\n  }\n\n  renderField();\n}\n\nfunction renderField() {\n  for (let i = 0; i < rowsCount; i++) {\n    for (let j = 0; j < colsCount; j++) {\n      table.rows[i].cells[j].className = '';\n      table.rows[i].cells[j].classList.add('field-cell');\n      table.rows[i].cells[j].classList.add(`field-cell--${field[i][j]}`);\n      table.rows[i].cells[j].textContent = field[i][j] || '';\n    }\n  }\n}\n"]}